{
  "frameworks": {
    "entityx": {
      "name": "EntityX",
      "author": "@alecthomas",
      "description": "Entity Component Systems (ECS) are a form of decomposition that completely decouples entity logic and data from the entity \"objects\" themselves. The Evolve your Hierarchy article provides a solid overview of EC systems and why you should use them.",
      "version": "1.1.2 (Dec 2021)",
      "link": "https://github.com/alecthomas/entityx"
    },
    "entt": {
      "name": "EnTT",
      "author": "@skypjack",
      "description": "EnTT is a header-only, tiny and easy to use library for game programming and much more written in modern C++.",
      "version": "3.10.1",
      "link": "https://github.com/skypjack/entt"
    },
    "ginseng": {
      "name": "Ginseng",
      "author": "@apples",
      "description": "Ginseng is an entity-component-system (ECS) library designed for use in games.\n\nThe main advantage over similar libraries is that the component types do not need to be listed or registered. Component types are detected dynamically.\n\nAny function-like object can be used as a system. The function's parameters are used to determine the required components.",
      "version": "1.1 (Dec 2021)",
      "link": "https://github.com/apples/ginseng"
    },
    "mustache": {
      "name": "mustache",
      "author": "@kirillochnev",
      "description": "A fast, modern C++ Entity Component System",
      "version": "0.2 (Feb 2022)",
      "link": "https://github.com/kirillochnev/mustache"
    },
    "openecs": {
      "name": "OpenEcs",
      "author": "@Gronis",
      "description": "Open Ecs is an Entity Component System that uses metaprogramming, cache coherency, and other useful tricks to maximize performance and configurability. It is written in c++11 without further dependencies.",
      "version": "Beta (Apr 2017)",
      "link": "https://github.com/Gronis/OpenEcs"
    },
    "oop": {
      "name": "OOP",
      "description": "Simple OOP Solution.",
      "skip_candidate": true
    }
  }
}
